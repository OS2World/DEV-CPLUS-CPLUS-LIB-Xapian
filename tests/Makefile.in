# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Only quartztest and btreetest need this, but if we put it in INCLUDES
# then we can use the same objects for the testsuite harness for all
# test programs.
@BUILD_BACKEND_QUARTZ_TRUE@am__append_1 = -I$(top_srcdir)/backends/quartz
check_PROGRAMS = $(am__EXEEXT_1) apitest$(EXEEXT) \
	internaltest$(EXEEXT) stemtest$(EXEEXT) \
	queryparsertest$(EXEEXT) termgentest$(EXEEXT)
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/harness/Makefile.mk \
	$(srcdir)/runsrv.in $(srcdir)/runtest.in
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/autoconf/rjb_find_stlport.m4 \
	$(top_srcdir)/autoconf/definedir.m4 \
	$(top_srcdir)/autoconf/type_socklen_t.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = runtest runsrv
@BUILD_BACKEND_QUARTZ_TRUE@am__EXEEXT_1 = btreetest$(EXEEXT) \
@BUILD_BACKEND_QUARTZ_TRUE@	quartztest$(EXEEXT)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = harness/backendmanager.$(OBJEXT) \
	harness/index_utils.$(OBJEXT) harness/unixcmds.$(OBJEXT) \
	harness/testsuite.$(OBJEXT) harness/testutils.$(OBJEXT)
am_apitest_OBJECTS = apitest.$(OBJEXT) api_nodb.$(OBJEXT) \
	api_posdb.$(OBJEXT) api_db.$(OBJEXT) api_wrdb.$(OBJEXT) \
	api_anydb.$(OBJEXT) api_transdb.$(OBJEXT) \
	api_unicode.$(OBJEXT) $(am__objects_1)
apitest_OBJECTS = $(am_apitest_OBJECTS)
apitest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
apitest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(apitest_LDFLAGS) $(LDFLAGS) -o $@
am_btreetest_OBJECTS = btreetest.$(OBJEXT) $(am__objects_1)
btreetest_OBJECTS = $(am_btreetest_OBJECTS)
btreetest_DEPENDENCIES = ../libgetopt.la ../libquartzcheck.la \
	../libxapian.la
btreetest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(btreetest_LDFLAGS) $(LDFLAGS) -o $@
am_internaltest_OBJECTS = internaltest.$(OBJEXT) $(am__objects_1)
internaltest_OBJECTS = $(am_internaltest_OBJECTS)
internaltest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
internaltest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(internaltest_LDFLAGS) $(LDFLAGS) -o $@
am_quartztest_OBJECTS = quartztest.$(OBJEXT) $(am__objects_1)
quartztest_OBJECTS = $(am_quartztest_OBJECTS)
quartztest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
quartztest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(quartztest_LDFLAGS) $(LDFLAGS) -o $@
am_queryparsertest_OBJECTS = queryparsertest.$(OBJEXT) \
	$(am__objects_1)
queryparsertest_OBJECTS = $(am_queryparsertest_OBJECTS)
queryparsertest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
queryparsertest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(queryparsertest_LDFLAGS) $(LDFLAGS) -o $@
am_stemtest_OBJECTS = stemtest.$(OBJEXT) $(am__objects_1)
stemtest_OBJECTS = $(am_stemtest_OBJECTS)
stemtest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
stemtest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(stemtest_LDFLAGS) $(LDFLAGS) -o $@
am_termgentest_OBJECTS = termgentest.$(OBJEXT) $(am__objects_1)
termgentest_OBJECTS = $(am_termgentest_OBJECTS)
termgentest_DEPENDENCIES = ../libgetopt.la ../libxapian.la
termgentest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(termgentest_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(apitest_SOURCES) $(btreetest_SOURCES) \
	$(internaltest_SOURCES) $(quartztest_SOURCES) \
	$(queryparsertest_SOURCES) $(stemtest_SOURCES) \
	$(termgentest_SOURCES)
DIST_SOURCES = $(apitest_SOURCES) $(btreetest_SOURCES) \
	$(internaltest_SOURCES) $(quartztest_SOURCES) \
	$(queryparsertest_SOURCES) $(stemtest_SOURCES) \
	$(termgentest_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
ANSI_CXXFLAGS = @ANSI_CXXFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_DOT_PATH = @DOXYGEN_DOT_PATH@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HELP2MAN = @HELP2MAN@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBRARY_VERSION_INFO = @LIBRARY_VERSION_INFO@
LIBS = @LIBS@

# `make QUIET=' overrides `./configure --enable-quiet'.
# `make QUIET=y' overrides `./configure' without `--enable-quiet'.
LIBTOOL = @LIBTOOL@ $(QUIET:y=--quiet)
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAJOR_VERSION = @MAJOR_VERSION@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MINOR_VERSION = @MINOR_VERSION@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QUIET = @QUIET@
RANLIB = @RANLIB@
REVISION = @REVISION@
RST2HTML = @RST2HTML@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STLPORT_CXXFLAGS = @STLPORT_CXXFLAGS@
STLPORT_INCLUDE = @STLPORT_INCLUDE@
STLPORT_LIBS = @STLPORT_LIBS@
STRIP = @STRIP@
VALGRIND = @VALGRIND@
VALGRIND_LOG_FILE_OPT = @VALGRIND_LOG_FILE_OPT@
VERSION = @VERSION@
XAPIAN_LDFLAGS = @XAPIAN_LDFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
ldflags = @ldflags@
libdir = @libdir@
libexecdir = @libexecdir@
link_all_deplibs_CXX = @link_all_deplibs_CXX@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 subdir-objects
INCLUDES = -I$(top_srcdir)/common -I$(top_srcdir)/include \
	-I$(top_builddir)/include -I$(srcdir)/harness $(am__append_1)
TESTS_ENVIRONMENT = ./runtest
@BUILD_BACKEND_QUARTZ_TRUE@quartz_check_programs = btreetest quartztest
@BUILD_BACKEND_QUARTZ_TRUE@quartz_tests = btreetest$(EXEEXT) quartztest$(EXEEXT)
TESTS = $(quartz_tests) \
 apitest$(EXEEXT) internaltest$(EXEEXT) stemtest$(EXEEXT) \
 queryparsertest$(EXEEXT) \
 termgentest$(EXEEXT)


# Make sure runtest is up to date before running tests
check_SCRIPTS = runtest
noinst_HEADERS = apitest.h harness/backendmanager.h \
	harness/index_utils.h harness/unixcmds.h harness/testsuite.h \
	harness/testutils.h
apitest_SOURCES = apitest.cc api_nodb.cc api_posdb.cc api_db.cc api_wrdb.cc \
 api_anydb.cc api_transdb.cc api_unicode.cc $(testharness_sources)

apitest_LDFLAGS = -no-install $(ldflags)
apitest_LDADD = ../libgetopt.la ../libxapian.la
stemtest_SOURCES = stemtest.cc $(testharness_sources)
stemtest_LDFLAGS = -no-install $(ldflags)
stemtest_LDADD = ../libgetopt.la ../libxapian.la
internaltest_SOURCES = internaltest.cc $(testharness_sources)
internaltest_LDFLAGS = -no-install $(ldflags)
internaltest_LDADD = ../libgetopt.la ../libxapian.la
btreetest_SOURCES = btreetest.cc $(testharness_sources)
btreetest_LDFLAGS = -no-install $(ldflags)
btreetest_LDADD = ../libgetopt.la ../libquartzcheck.la ../libxapian.la
quartztest_SOURCES = quartztest.cc $(testharness_sources)
quartztest_LDFLAGS = -no-install $(ldflags)
quartztest_LDADD = ../libgetopt.la ../libxapian.la
queryparsertest_SOURCES = queryparsertest.cc $(testharness_sources)
queryparsertest_LDFLAGS = -no-install $(ldflags)
queryparsertest_LDADD = ../libgetopt.la ../libxapian.la
termgentest_SOURCES = termgentest.cc $(testharness_sources)
termgentest_LDFLAGS = -no-install $(ldflags)
termgentest_LDADD = ../libgetopt.la ../libxapian.la
EXTRA_DIST = runtest.in valgrind.supp testdata/apitest_onedoc.txt \
	testdata/apitest_simpledata.txt \
	testdata/apitest_simpledata2.txt \
	testdata/apitest_termorder.txt testdata/apitest_rset.txt \
	testdata/apitest_phrase.txt testdata/apitest_punc.txt \
	testdata/apitest_space.txt testdata/apitest_allterms.txt \
	testdata/apitest_allterms2.txt testdata/apitest_allterms4.txt \
	testdata/apitest_poslist.txt testdata/apitest_manydocs.txt \
	testdata/apitest_sortrel.txt testdata/etext.txt \
	testdata/btreetest_ord+ testdata/btreetest_ord- \
	testdata/btreetest_ordnum+ testdata/btreetest_ordnum- \
	testdata/flint-0.9.9/value.DB \
	testdata/flint-0.9.9/position.baseA \
	testdata/flint-0.9.9/flicklock \
	testdata/flint-0.9.9/value.baseA \
	testdata/flint-0.9.9/record.baseA \
	testdata/flint-0.9.9/termlist.DB \
	testdata/flint-0.9.9/termlist.baseA \
	testdata/flint-0.9.9/record.DB testdata/flint-0.9.9/iamflint \
	testdata/flint-0.9.9/postlist.DB \
	testdata/flint-0.9.9/position.DB \
	testdata/flint-0.9.9/postlist.baseA \
	testdata/flint-1.0.1/value.DB \
	testdata/flint-1.0.1/position.baseA \
	testdata/flint-1.0.1/flintlock \
	testdata/flint-1.0.1/value.baseA \
	testdata/flint-1.0.1/record.baseA \
	testdata/flint-1.0.1/termlist.DB \
	testdata/flint-1.0.1/termlist.baseA \
	testdata/flint-1.0.1/record.DB testdata/flint-1.0.1/iamflint \
	testdata/flint-1.0.1/postlist.DB \
	testdata/flint-1.0.1/position.DB \
	testdata/flint-1.0.1/postlist.baseA harness/dir_contents \
	harness/Makefile
testharness_sources = \
	harness/backendmanager.cc\
	harness/index_utils.cc\
	harness/unixcmds.cc\
	harness/testsuite.cc\
	harness/testutils.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/harness/Makefile.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
runtest: $(top_builddir)/config.status $(srcdir)/runtest.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
runsrv: $(top_builddir)/config.status $(srcdir)/runsrv.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
harness/$(am__dirstamp):
	@$(MKDIR_P) harness
	@: > harness/$(am__dirstamp)
harness/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) harness/$(DEPDIR)
	@: > harness/$(DEPDIR)/$(am__dirstamp)
harness/backendmanager.$(OBJEXT): harness/$(am__dirstamp) \
	harness/$(DEPDIR)/$(am__dirstamp)
harness/index_utils.$(OBJEXT): harness/$(am__dirstamp) \
	harness/$(DEPDIR)/$(am__dirstamp)
harness/unixcmds.$(OBJEXT): harness/$(am__dirstamp) \
	harness/$(DEPDIR)/$(am__dirstamp)
harness/testsuite.$(OBJEXT): harness/$(am__dirstamp) \
	harness/$(DEPDIR)/$(am__dirstamp)
harness/testutils.$(OBJEXT): harness/$(am__dirstamp) \
	harness/$(DEPDIR)/$(am__dirstamp)
apitest$(EXEEXT): $(apitest_OBJECTS) $(apitest_DEPENDENCIES) 
	@rm -f apitest$(EXEEXT)
	$(apitest_LINK) $(apitest_OBJECTS) $(apitest_LDADD) $(LIBS)
btreetest$(EXEEXT): $(btreetest_OBJECTS) $(btreetest_DEPENDENCIES) 
	@rm -f btreetest$(EXEEXT)
	$(btreetest_LINK) $(btreetest_OBJECTS) $(btreetest_LDADD) $(LIBS)
internaltest$(EXEEXT): $(internaltest_OBJECTS) $(internaltest_DEPENDENCIES) 
	@rm -f internaltest$(EXEEXT)
	$(internaltest_LINK) $(internaltest_OBJECTS) $(internaltest_LDADD) $(LIBS)
quartztest$(EXEEXT): $(quartztest_OBJECTS) $(quartztest_DEPENDENCIES) 
	@rm -f quartztest$(EXEEXT)
	$(quartztest_LINK) $(quartztest_OBJECTS) $(quartztest_LDADD) $(LIBS)
queryparsertest$(EXEEXT): $(queryparsertest_OBJECTS) $(queryparsertest_DEPENDENCIES) 
	@rm -f queryparsertest$(EXEEXT)
	$(queryparsertest_LINK) $(queryparsertest_OBJECTS) $(queryparsertest_LDADD) $(LIBS)
stemtest$(EXEEXT): $(stemtest_OBJECTS) $(stemtest_DEPENDENCIES) 
	@rm -f stemtest$(EXEEXT)
	$(stemtest_LINK) $(stemtest_OBJECTS) $(stemtest_LDADD) $(LIBS)
termgentest$(EXEEXT): $(termgentest_OBJECTS) $(termgentest_DEPENDENCIES) 
	@rm -f termgentest$(EXEEXT)
	$(termgentest_LINK) $(termgentest_OBJECTS) $(termgentest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f harness/backendmanager.$(OBJEXT)
	-rm -f harness/index_utils.$(OBJEXT)
	-rm -f harness/testsuite.$(OBJEXT)
	-rm -f harness/testutils.$(OBJEXT)
	-rm -f harness/unixcmds.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_anydb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_db.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_nodb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_posdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_transdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_unicode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api_wrdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/apitest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/btreetest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/internaltest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quartztest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryparsertest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stemtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termgentest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@harness/$(DEPDIR)/backendmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@harness/$(DEPDIR)/index_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@harness/$(DEPDIR)/testsuite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@harness/$(DEPDIR)/testutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@harness/$(DEPDIR)/unixcmds.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	mv -f $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	mv -f $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	mv -f $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f harness/$(DEPDIR)/$(am__dirstamp)
	-rm -f harness/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) harness/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) harness/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


.PHONY: check-none check-inmemory \
        check-remote check-remoteprog check-remotetcp \
        check-flint check-quartz

check-none: apitest$(EXEEXT) \
            internaltest$(EXEEXT) \
	    stemtest$(EXEEXT) \
	    queryparsertest$(EXEEXT) \
	    termgentest$(EXEEXT)
	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b none
	$(TESTS_ENVIRONMENT) ./internaltest$(EXEEXT)
	$(TESTS_ENVIRONMENT) ./stemtest$(EXEEXT)
	$(TESTS_ENVIRONMENT) ./queryparsertest$(EXEEXT)
	$(TESTS_ENVIRONMENT) ./termgentest$(EXEEXT)

check-inmemory: apitest$(EXEEXT)
	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b inmemory

@BUILD_BACKEND_REMOTE_TRUE@check-remote: apitest$(EXEEXT)
@BUILD_BACKEND_REMOTE_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b remoteprog
@BUILD_BACKEND_REMOTE_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b remotetcp
@BUILD_BACKEND_REMOTE_TRUE@check-remoteprog: apitest$(EXEEXT)
@BUILD_BACKEND_REMOTE_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b remoteprog
@BUILD_BACKEND_REMOTE_TRUE@check-remotetcp: apitest$(EXEEXT)
@BUILD_BACKEND_REMOTE_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b remotetcp

@BUILD_BACKEND_FLINT_TRUE@check-flint: apitest$(EXEEXT)
@BUILD_BACKEND_FLINT_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b flint

@BUILD_BACKEND_QUARTZ_TRUE@check-quartz: btreetest$(EXEEXT) quartztest$(EXEEXT) apitest$(EXEEXT)
@BUILD_BACKEND_QUARTZ_TRUE@	$(TESTS_ENVIRONMENT) ./btreetest$(EXEEXT)
@BUILD_BACKEND_QUARTZ_TRUE@	$(TESTS_ENVIRONMENT) ./quartztest$(EXEEXT)
@BUILD_BACKEND_QUARTZ_TRUE@	$(TESTS_ENVIRONMENT) ./apitest$(EXEEXT) -b quartz

clean-local:
	rm -rf .flint .quartz .quartztmp .btreetmp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
